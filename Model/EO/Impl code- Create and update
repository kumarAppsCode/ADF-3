    protected void create(AttributeList attributeList) {
        SequenceImpl seq = new SequenceImpl("FUNC_ID_S", this.getDBTransaction());
        this.setFuncId(seq.getSequenceNumber());
//        this.setCreatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
//        this.setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
//        this.setLastUpdateLogin(ADFContext.getCurrent().getSessionScope().get("userName").toString());
        this.setCreatedBy("Dinesh");
        this.setLastUpdatedBy("Dinesh");
        this.setLastUpdateLogin("Dinesh");
        this.setCreationDate(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }
   
   
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==EntityImpl.DML_UPDATE){
//          setLastUpdatedBy(ADFContext.getCurrent().getSessionScope().get("userName").toString());
//          setLastUpdateLogin(ADFContext.getCurrent().getSessionScope().get("userName").toString());
            this.setLastUpdatedBy("Dinesh");
            this.setLastUpdateLogin("Dinesh");
            this.setLastUpdateDate(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }

/**
     * Add entity remove logic in this method.
     */
    public void remove() {
        //Get all Employees of currenlty selected Department
        RowIterator employees = getEmployeesEO1();
        while (employees.hasNext()) {
            //Delete all Employees
            employees.next().remove();
        }
        //Delete Department itself after deleting all Employees associated with it
        super.remove();
    }
