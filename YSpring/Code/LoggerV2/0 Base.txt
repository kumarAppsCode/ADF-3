logback.xml
==========================================================================================
<configuration>
<appender name = "STDOUT" class = "ch.qos.logback.core.ConsoleAppender">
 <encoder>
         <pattern>[%d{yyyy-MM-dd HH:mm:ss}] - %msg%n</pattern>
      </encoder>
</appender>
<appender name="SIZE_TIME_OUTPUT_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>c:/Tools/logs/sizeTimeOutputlogFile.log</file>
    <encoder>
         <pattern>[%d{yyyy-MM-dd HH:mm:ss}] - %msg%n</pattern>
      </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        <fileNamePattern>c:/Tools/logs/archived/sizeTimeOutputlogFile.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
        <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
<!--Max Size of file to start Archive -->
            <maxFileSize>10KB</maxFileSize>
        </timeBasedFileNamingAndTriggeringPolicy>

<!-- Days till log history to keep -->
         <maxHistory>3</maxHistory>
    </rollingPolicy>
   
</appender>
   
   <root level = "DEBUG">
      <appender-ref ref = "SIZE_TIME_OUTPUT_FILE"/>
      <appender-ref ref = "STDOUT"/>
   </root>
</configuration>
==========================================================================================
@RestController
public class LoggerController {
private static final Logger logger = LoggerFactory.getLogger(LoggerController.class);
 
@RequestMapping("/")
public String hello() {
    logger.info("This is sample info message");
    logger.warn("This is sample warn message");
    logger.error("This is sample error message");
    logger.debug("This is sample debug message");
 
    return "Hello Simplifying Tech";
}
}
